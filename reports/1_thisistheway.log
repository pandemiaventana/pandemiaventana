Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.7.10/x64/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/opt/hostedtoolcache/Python/3.7.10/x64/lib/python3.7/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.7.10/x64/lib/python3.7/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.7.10/x64/lib/python3.7/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.7.10/x64/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.7.10/x64/lib/python3.7/site-packages/nbclient/client.py", line 554, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/opt/hostedtoolcache/Python/3.7.10/x64/lib/python3.7/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/hostedtoolcache/Python/3.7.10/x64/lib/python3.7/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
### Generando reporte diario ###

### Abriendo gráficos guardados
x = range(1, 7)
for i in x:
    image_path = '../../in/diario/grafico/{}.png'.format(i)
    exec('graph{} = Image.open(image_path)'.format(i))
    i += i

### Cargando imagenes
x = range(1, 11)
for i in x:
    image_path = '../../in/diario/{}.png'.format(i)
    exec('diario_{} = Image.open(image_path)'.format(i))
    exec('diario{} = diario_{}.copy()'.format(i, i))
    i += i
    
### Cargando texto
roboto = 'Roboto-Regular.ttf'
coolvetica = 'coolvetica rg.ttf'
fontsFolder = '\\Windows\\Fonts.'
roboto_ed = ImageFont.truetype(os.path.join(fontsFolder, roboto), 50)
roboto_data0 = ImageFont.truetype(os.path.join(fontsFolder, roboto), 20)
roboto_data1 = ImageFont.truetype(os.path.join(fontsFolder, roboto), 28)
roboto_data2 = ImageFont.truetype(os.path.join(fontsFolder, roboto), 30)
roboto_data3 = ImageFont.truetype(os.path.join(fontsFolder, roboto), 40)
coolvetica_data0 = ImageFont.truetype(os.path.join(fontsFolder, coolvetica), 30)
coolvetica_data1 = ImageFont.truetype(os.path.join(fontsFolder, coolvetica), 70)
coolvetica_data2 = ImageFont.truetype(os.path.join(fontsFolder, coolvetica), 150)
coolvetica_data3 = ImageFont.truetype(os.path.join(fontsFolder, coolvetica), 100)
coolvetica_data4 = ImageFont.truetype(os.path.join(fontsFolder, coolvetica), 180)

### Manipulando primera imagen
txt = ImageDraw.Draw(diario1)

### Textos
txt.text((860, 35), '{}° ed.'.format(ed_hoy), fill='#b9b9b9', font=roboto_ed) # edicion
txt.text((380, 357), '{}'.format(df.loc[weekend_data].name.strftime('%d/%m/%Y')), fill='#fff', font=roboto_data1) # fecha
txt.text((650, 435), '{}'.format(casos_hoy), fill='#dfdede', font=coolvetica_data1) # casos nuevos
txt.text((820, 510), '{}'.format(recuperados_hoy), fill='#dfdede', font=coolvetica_data1) # recuperados nuevos
txt.text((745, 585), '{}'.format(fallecidosnuevos_hoy), fill='#dfdede', font=coolvetica_data1) # fallecidos nuevos
txt.text((825, 660), '{}'.format(activos_hoy), fill='#dfdede', font=coolvetica_data1) # activos
txt.text((760, 735), '{}'.format(activosprobables_hoy), fill='#dfdede', font=coolvetica_data1) # activos probables
txt.text((700, 810), '{}'.format(pcrnuevos_hoy), fill='#dfdede', font=coolvetica_data1) # pcr nuevos
txt.text((695, 890), '{}%'.format(positividad_hoy), fill='#dfdede', font=coolvetica_data1) # positividad diaria
txt.text((750, 965), '{}'.format(residenciasusuarios_hoy), fill='#dfdede', font=coolvetica_data1) # residencias sanitarias
txt.text((725, 1035), '{}'.format(ucidiaria_hoy), fill='#dfdede', font=coolvetica_data1) # uci diaria

### Guardamos
diario1.save('../../out/diario/1.png')

### Manipulando segunda imagen
txt = ImageDraw.Draw(diario2)

### Textos (a diferencia de los textos anteriores, debemos centrar a medida se añaden carácteres con 'anchor')
txt.text((190, 680), '{}'.format(consintomas_hoy), fill='#dfdede', font=coolvetica_data2, anchor='ms') # casos con sintomas
txt.text((190, 750), 'Ayer: {}'.format(consintomas_ayer), fill='#989898', font=roboto_data3, anchor='ms') # ayer, casos con sintomas
txt.text((540, 680), '{}'.format(sinsintomas_hoy), fill='#dfdede', font=coolvetica_data2, anchor='ms') # casos sin sintomas
txt.text((540, 750), 'Ayer: {}'.format(sinsintomas_ayer), fill='#989898', font=roboto_data3, anchor='ms') # ayer, casos sin sintomas
txt.text((890, 680), '{}'.format(porlaboratorio_hoy), fill='#dfdede', font=coolvetica_data2, anchor='ms') # casos por laboratorio
txt.text((890, 750), 'Ayer: {}'.format(porlaboratorio_ayer), fill='#989898', font=roboto_data3, anchor='ms') # ayer, casos por laboratorio
txt.text((350, 910), '{} casos nuevos confirmados por antígeno.'.format(antigeno_hoy), fill='#b9b9b9', font=roboto_data1) # nuevos antigeno
txt.text((350, 960), '{} casos del total están con sospecha de reinfección.'.format(reinfeccion_hoy), fill='#b9b9b9', font=roboto_data1) # reinfeccion
 
### Gráficos
diario2.paste(graph1, (570, 50), graph1)

### Guardamos
diario2.save('../../out/diario/2.png')

### Manipulando tercera imagen
txt = ImageDraw.Draw(diario3)

### Textos
txt.text((190, 680), '{}'.format(casos_hoy), fill='#dfdede', font=coolvetica_data2, anchor='ms') # casos con sintomas
txt.text((190, 750), 'Ayer: {}'.format(casos_ayer), fill='#989898', font=roboto_data3, anchor='ms') # ayer, casos con sintomas
txt.text((540, 680), '{}'.format(recuperados_hoy), fill='#dfdede', font=coolvetica_data2, anchor='ms') # casos sin sintomas
txt.text((540, 750), 'Ayer: {}'.format(recuperados_ayer), fill='#989898', font=roboto_data3, anchor='ms') # ayer, casos sin sintomas
txt.text((890, 680), '{}'.format(fallecidosnuevos_hoy), fill='#dfdede', font=coolvetica_data2, anchor='ms') # casos por laboratorio
txt.text((890, 750), 'Ayer: {}'.format(fallecidosnuevos_ayer), fill='#989898', font=roboto_data3, anchor='ms') # ayer, casos por laboratorio
txt.text((190, 860), 'Acumulado: {}'.format(casosacumulados_hoy), fill='#989898', font=roboto_data1, anchor='ms') # nuevos antigeno
txt.text((540, 860), 'Acumulado: {}'.format(recuperadosacumulados_hoy), fill='#989898', font=roboto_data1, anchor='ms') # reinfeccion
txt.text((890, 860), 'Acumulado: {}'.format(fallecidosacumulados_hoy), fill='#989898', font=roboto_data1, anchor='ms') # reinfeccion

### Gráficos
diario3.paste(graph2, (570, 50), graph2)

### Guardamos
diario3.save('../../out/diario/3.png')

### Manipulando cuarta imagen
txt = ImageDraw.Draw(diario4)

### Textos
txt.text((780, 50), '{}'.format(reregional_hoy), fill='#dfdede', font=coolvetica_data2) # casos con sintomas
txt.text((190, 680), '{}'.format(pcrnuevos_hoy), fill='#dfdede', font=coolvetica_data2, anchor='ms') # casos con sintomas
txt.text((190, 750), 'Ayer: {}'.format(pcrnuevos_ayer), fill='#989898', font=roboto_data3, anchor='ms') # ayer, casos con sintomas
txt.text((540, 680), '{}'.format(residenciasusuarios_hoy), fill='#dfdede', font=coolvetica_data2, anchor='ms') # casos sin sintomas
txt.text((540, 750), 'Ayer: {}'.format(residenciasusuarios_ayer), fill='#989898', font=roboto_data3, anchor='ms') # ayer, casos sin sintomas
txt.text((890, 680), '{}'.format(activos_hoy), fill='#dfdede', font=coolvetica_data2, anchor='ms') # casos por laboratorio
txt.text((890, 750), 'Ayer: {}'.format(activos_ayer), fill='#989898', font=roboto_data3, anchor='ms') # ayer, casos por laboratorio
txt.text((190, 860), 'Acumulado: {}'.format(pcracumulados_hoy), fill='#989898', font=roboto_data1, anchor='ms') # nuevos antigeno

### Guardamos
diario4.save('../../out/diario/4.png')

### Manipulando quinta imagen
txt = ImageDraw.Draw(diario5)

### Textos
txt.text((780, 50), '{}%'.format(positividadmovil_hoy), fill='#dfdede', font=coolvetica_data2) # casos con sintomas
txt.text((190, 680), '{}%'.format(positividad_hoy), fill='#dfdede', font=coolvetica_data2, anchor='ms') # casos con sintomas
txt.text((190, 750), 'Ayer: {}%'.format(positividad_ayer), fill='#989898', font=roboto_data3, anchor='ms') # ayer, casos con sintomas
txt.text((540, 680), '{}%'.format(procesovacunacion_hoy), fill='#dfdede', font=coolvetica_data2, anchor='ms') # casos sin sintomas
txt.text((540, 750), 'Ayer: {}%'.format(procesovacunacion_ayer), fill='#989898', font=roboto_data3, anchor='ms') # ayer, casos sin sintomas
txt.text((890, 680), '{}'.format(me_hoy), fill='#dfdede', font=coolvetica_data2, anchor='ms') # casos por laboratorio
txt.text((890, 750), 'Ayer: {}'.format(me_ayer), fill='#989898', font=roboto_data3, anchor='ms') # ayer, casos por laboratorio
txt.text((540, 860), 'Acum. 2° dosis: {}'.format(procesovacunaciontotales_hoy), fill='#989898', font=roboto_data1, anchor='ms') # nuevos antigeno

### Guardamos
diario5.save('../../out/diario/5.png')

### Manipulando sexta imagen
txt = ImageDraw.Draw(diario6)

### Textos
txt.text((780, 50), '{}'.format(tasanuevos_hoy), fill='#dfdede', font=coolvetica_data2) # casos con sintomas
txt.text((280, 680), '{}'.format(activosprobables_hoy), fill='#dfdede', font=coolvetica_data2, anchor='ms') # casos con sintomas
txt.text((280, 750), 'Ayer: {}'.format(activosprobables_ayer), fill='#989898', font=roboto_data3, anchor='ms') # ayer, casos con sintomas
txt.text((800, 680), '{}%'.format(uciaprox_hoy), fill='#dfdede', font=coolvetica_data2, anchor='ms') # casos sin sintomas
txt.text((800, 750), 'Error aprox.: ±{}%'.format(errorabs_hoy), fill='#989898', font=roboto_data3, anchor='ms') # ayer, casos sin sintomas

### Guardamos
diario6.save('../../out/diario/6.png')

### Manipulando séptima, octava, novena y décima imagen
x = range(7, 11)
for i in x:
    ### Gráficos
    exec('diario{}.paste(graph{}, (-55, 155), graph{})'.format(i, i-4, i-4))
    ### Guardamos
    exec('diario{}.save("../../out/diario/{}.png")'.format(i, i))
    i += i
    
### ¿Todo ok?
display(Markdown('> Todas las imágenes del reporte diario han sido correctamente exportadas.'))

### Guardamos a PDF
pdfs = []
for i in range(2, 11):
    exec('pdfs += [diario{}]'.format(i))

### Histórico
diario1.convert('RGB').save('../../out/diario/pdf\\{}.pdf'.format(df['Casos nuevos'].last_valid_index().strftime('%Y.%m.%d'),
                                                 df['Casos nuevos'].last_valid_index().strftime('%Y.%m.%d')
                                             ), save_all=True, append_images=[pdf.convert('RGB') for pdf in pdfs])

### Última actualización
diario1.convert('RGB').save('../../out/diario/pdf/ult/ult.pdf', save_all=True, append_images=[pdf.convert('RGB') for pdf in pdfs])

### ¿Todo ok?
display(Markdown('> El PDF del reporte diario ha sido exportado.'))
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mOSError[0m                                   Traceback (most recent call last)
[0;32m<ipython-input-13-182e97d9775d>[0m in [0;36m<module>[0;34m[0m
[1;32m     20[0m [0mcoolvetica[0m [0;34m=[0m [0;34m'coolvetica rg.ttf'[0m[0;34m[0m[0;34m[0m[0m
[1;32m     21[0m [0mfontsFolder[0m [0;34m=[0m [0;34m'\\Windows\\Fonts.'[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 22[0;31m [0mroboto_ed[0m [0;34m=[0m [0mImageFont[0m[0;34m.[0m[0mtruetype[0m[0;34m([0m[0mos[0m[0;34m.[0m[0mpath[0m[0;34m.[0m[0mjoin[0m[0;34m([0m[0mfontsFolder[0m[0;34m,[0m [0mroboto[0m[0;34m)[0m[0;34m,[0m [0;36m50[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     23[0m [0mroboto_data0[0m [0;34m=[0m [0mImageFont[0m[0;34m.[0m[0mtruetype[0m[0;34m([0m[0mos[0m[0;34m.[0m[0mpath[0m[0;34m.[0m[0mjoin[0m[0;34m([0m[0mfontsFolder[0m[0;34m,[0m [0mroboto[0m[0;34m)[0m[0;34m,[0m [0;36m20[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     24[0m [0mroboto_data1[0m [0;34m=[0m [0mImageFont[0m[0;34m.[0m[0mtruetype[0m[0;34m([0m[0mos[0m[0;34m.[0m[0mpath[0m[0;34m.[0m[0mjoin[0m[0;34m([0m[0mfontsFolder[0m[0;34m,[0m [0mroboto[0m[0;34m)[0m[0;34m,[0m [0;36m28[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/hostedtoolcache/Python/3.7.10/x64/lib/python3.7/site-packages/PIL/ImageFont.py[0m in [0;36mtruetype[0;34m(font, size, index, encoding, layout_engine)[0m
[1;32m    851[0m [0;34m[0m[0m
[1;32m    852[0m     [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 853[0;31m         [0;32mreturn[0m [0mfreetype[0m[0;34m([0m[0mfont[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    854[0m     [0;32mexcept[0m [0mOSError[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    855[0m         [0;32mif[0m [0;32mnot[0m [0misPath[0m[0;34m([0m[0mfont[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/hostedtoolcache/Python/3.7.10/x64/lib/python3.7/site-packages/PIL/ImageFont.py[0m in [0;36mfreetype[0;34m(font)[0m
[1;32m    848[0m [0;34m[0m[0m
[1;32m    849[0m     [0;32mdef[0m [0mfreetype[0m[0;34m([0m[0mfont[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 850[0;31m         [0;32mreturn[0m [0mFreeTypeFont[0m[0;34m([0m[0mfont[0m[0;34m,[0m [0msize[0m[0;34m,[0m [0mindex[0m[0;34m,[0m [0mencoding[0m[0;34m,[0m [0mlayout_engine[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    851[0m [0;34m[0m[0m
[1;32m    852[0m     [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/hostedtoolcache/Python/3.7.10/x64/lib/python3.7/site-packages/PIL/ImageFont.py[0m in [0;36m__init__[0;34m(self, font, size, index, encoding, layout_engine)[0m
[1;32m    208[0m                     [0;32mreturn[0m[0;34m[0m[0;34m[0m[0m
[1;32m    209[0m             self.font = core.getfont(
[0;32m--> 210[0;31m                 [0mfont[0m[0;34m,[0m [0msize[0m[0;34m,[0m [0mindex[0m[0;34m,[0m [0mencoding[0m[0;34m,[0m [0mlayout_engine[0m[0;34m=[0m[0mlayout_engine[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    211[0m             )
[1;32m    212[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mOSError[0m: cannot open resource
OSError: cannot open resource

