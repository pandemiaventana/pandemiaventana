Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/nbclient/client.py", line 1093, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/nbclient/client.py", line 560, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/nbclient/client.py", line 854, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/nbclient/client.py", line 756, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
### Graficando para indicador fase ###

### Primer gr√°fico: D√≠as por fase por comuna
graph1 = graphBar([df.loc[:, df.columns.str.contains('Paso a Paso (dias)', regex=False)].columns.str[19:]],\
                   [df.loc[:, df.columns.str.contains('Paso a Paso (dias)', regex=False)].loc[pasopaso_comuna.index[-1]]], \
                   color=resultado_colores, alpha=[1], \
                   path='../../in/indicadorfase/grafico/1.png', uni=1, w=3.5, l=2.5, rot=15)

### Segundo gr√°fico: Activos al √∫ltimo informe epidemiol√≥gico por comuna
graph2 = graphBar([df.loc[:, df.columns.str.contains('Paso a Paso (dias)', regex=False)].columns.str[19:]],\
                   [(df.loc[:, df.columns.str.contains('Casos activos en')].
loc[casoscomuna_activos.last_valid_index()].reset_index(drop=True).divide(poblaciones_comunales)*100000)[:7]], \
                   color=resultado_colores + ['white'], alpha=[1], \
                   path='../../in/indicadorfase/grafico/2.png', uni=1, w=3.5, l=2.5, rot=15)

### Tercer gr√°fico: Fallecidos al √∫ltimo informe epidemiol√≥gico por comuna
graph3 = graphBar([df.loc[:, df.columns.str.contains('confirmados DEIS', regex=False)].columns.str[28:]],\
                   [df.loc[:, df.columns.str.contains('confirmados DEIS', regex=False)].loc
                    [casoscomuna_activos.index[-1]].reset_index(drop=True).divide(poblaciones_comunales)*100000], \
                   color=resultado_colores, alpha=[1], \
                   path='../../in/indicadorfase/grafico/3.png', uni=1, w=3.5, l=2.5, rot=15)

### Cuarto gr√°fico: Notificaci√≥n PCR por comuna
graph4 = graphBar([df.loc[:, df.columns.str.contains('Notificacion PCR', regex=False)].columns.str[17:]],\
                   [df.loc[:, df.columns.str.contains('Notificacion PCR ', regex=False)]
                    .loc[positividad_comuna.last_valid_index()].reset_index(drop=True).divide(poblaciones_comunales)*100000], \
                   color=resultado_colores, alpha=[1], \
                   path='../../in/indicadorfase/grafico/4.png', uni=1, w=3.5, l=2.5, rot=15)

### Quinto gr√°fico: Casos acumulados por comuna
graph5 = graphBar([df.loc[:, df.columns.str.contains('Casos acumulados en', regex=False)].columns.str[20:][:7]],\
                   [(df.loc[:, df.columns.str.contains('Casos acumulados en')].
loc[casoscomuna_activos.last_valid_index()].reset_index(drop=True).divide(poblaciones_comunales)*100000)[:7]], \
                   color=resultado_colores, alpha=[1], \
                   path='../../in/indicadorfase/grafico/5.png', uni=1, w=3.5, l=2.5, rot=15)

### Sexto gr√°fico: Positividad por comuna
graph6 = graphBar([df.loc[:, df.columns.str.contains('Paso a Paso (dias)', regex=False)].columns.str[19:]],\
                   [df.loc[:, df.columns.str.contains('Positividad ', regex=False) & 
                   ~df.columns.str.contains('diaria', regex=False) &
                   ~df.columns.str.contains('movil', regex=False) &
                   ~df.columns.str.contains('antigeno', regex=False)].loc[positividad_comuna.last_valid_index()]], \
                   color=resultado_colores + ['white'], alpha=[1], \
                   path='../../in/indicadorfase/grafico/6.png', uni=1, w=3.5, l=2.5, rot=15, opt='%')

### S√©ptimo gr√°fico: BAC por comuna
graph7 = graphBar([df.loc[:, df.columns.str.contains('BAC', regex=False)].columns.str[4:]],\
                   [df.loc[:, df.columns.str.contains('BAC ', regex=False)].loc[positividad_comuna.last_valid_index()]], \
                   color=resultado_colores, alpha=[1], \
                   path='../../in/indicadorfase/grafico/7.png', uni=1, w=3.5, l=2.5, rot=15, opt='%')

### ¬øTodo ok?
print('\n \n Gr√°ficos del indicador de fase guardados de forma exitosa.')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m/tmp/ipykernel_3095/1228308839.py[0m in [0;36m<module>[0;34m[0m
[1;32m     24[0m graph4 = graphBar([df.loc[:, df.columns.str.contains('Notificacion PCR', regex=False)].columns.str[17:]],\
[1;32m     25[0m                    [df.loc[:, df.columns.str.contains('Notificacion PCR ', regex=False)]
[0;32m---> 26[0;31m                     .loc[positividad_comuna.last_valid_index()].reset_index(drop=True).divide(poblaciones_comunales)*100000], \
[0m[1;32m     27[0m                    [0mcolor[0m[0;34m=[0m[0mresultado_colores[0m[0;34m,[0m [0malpha[0m[0;34m=[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m,[0m[0;31m [0m[0;31m\[0m[0;34m[0m[0;34m[0m[0m
[1;32m     28[0m                    path='../../in/indicadorfase/grafico/4.png', uni=1, w=3.5, l=2.5, rot=15)

[0;32m/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/pandas/core/ops/__init__.py[0m in [0;36mflex_wrapper[0;34m(self, other, level, fill_value, axis)[0m
[1;32m    163[0m [0;34m[0m[0m
[1;32m    164[0m         [0;32mif[0m [0misinstance[0m[0;34m([0m[0mother[0m[0;34m,[0m [0mABCSeries[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 165[0;31m             [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_binop[0m[0;34m([0m[0mother[0m[0;34m,[0m [0mop[0m[0;34m,[0m [0mlevel[0m[0;34m=[0m[0mlevel[0m[0;34m,[0m [0mfill_value[0m[0;34m=[0m[0mfill_value[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    166[0m         [0;32melif[0m [0misinstance[0m[0;34m([0m[0mother[0m[0;34m,[0m [0;34m([0m[0mnp[0m[0;34m.[0m[0mndarray[0m[0;34m,[0m [0mlist[0m[0;34m,[0m [0mtuple[0m[0;34m)[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    167[0m             [0;32mif[0m [0mlen[0m[0;34m([0m[0mother[0m[0;34m)[0m [0;34m!=[0m [0mlen[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/pandas/core/series.py[0m in [0;36m_binop[0;34m(self, other, func, level, fill_value)[0m
[1;32m   2726[0m [0;34m[0m[0m
[1;32m   2727[0m         [0;32mwith[0m [0mnp[0m[0;34m.[0m[0merrstate[0m[0;34m([0m[0mall[0m[0;34m=[0m[0;34m"ignore"[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 2728[0;31m             [0mresult[0m [0;34m=[0m [0mfunc[0m[0;34m([0m[0mthis_vals[0m[0;34m,[0m [0mother_vals[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   2729[0m [0;34m[0m[0m
[1;32m   2730[0m         [0mname[0m [0;34m=[0m [0mops[0m[0;34m.[0m[0mget_op_result_name[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mother[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mTypeError[0m: unsupported operand type(s) for /: 'str' and 'float'
TypeError: unsupported operand type(s) for /: 'str' and 'float'

